// Generated by CoffeeScript 1.10.0
(function() {
  var HTMLify, Render, _, createElement, createTextNode, getByAttribute, getElementById, hk, querySelector, querySelectorAll, ref;

  _ = require('lodash');

  HTMLify = require('./htmlify');

  ref = require('./doc'), getElementById = ref.getElementById, createTextNode = ref.createTextNode, createElement = ref.createElement, querySelectorAll = ref.querySelectorAll, querySelector = ref.querySelector, getByAttribute = ref.getByAttribute;

  hk = 'himesama-id';

  module.exports = Render = {
    node: function(model, draft) {
      var children, el, id, nEl, parent;
      id = model.attributes[hk];
      el = getByAttribute(hk, id);
      children = _.toArray(el.children);
      nEl = _.reduce(children, function(nEl, child) {
        nEl.appendChild(child);
        return nEl;
      }, HTMLify.Single(draft));
      parent = el.parentNode;
      return parent.replaceChild(nEl, el);
    },
    nodeToText: function(model, draft) {
      var el, id, nEl, parent;
      id = model.attributes[hk];
      el = getByAttribute(hk, id);
      nEl = HTMLify.Text(draft.content);
      parent = el.parentNode;
      return parent.replaceChild(nEl, el);
    },
    textToNode: function(model, draft) {
      var id, nEl, parent;
      parent = model.parent;
      id = parent.attributes[hk];
      parent = getByAttribute(hk, id);
      nEl = HTMLify(draft);
      parent.textContent = '';
      return parent.appendChild(nEl);
    },
    text: function(model, draft) {
      var id, parent;
      parent = model.parent;
      id = parent.attributes[hk];
      parent = getByAttribute(hk, id);
      return parent.textContent = draft.content;
    },
    remove: function(model, i) {
      var el, id, parent;
      if (model.type === 'himesama-text') {
        parent = model.parent;
        id = parent.attributes[hk];
        el = getByAttribute(hk, id);
        return el.textContent = '';
      } else {
        id = model.attributes[hk];
        el = getByAttribute(hk, id);
        return el.remove();
      }
    },
    add: function(model, child) {
      var el, id;
      if (child.type === 'himesama-text') {
        return el.textContent = child.content;
      } else {
        child = HTMLify(child);
        id = model.attributes[hk];
        el = getByAttribute(hk, id);
        return el.appendChild(child);
      }
    }
  };

}).call(this);
